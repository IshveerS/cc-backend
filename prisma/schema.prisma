generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @unique @default(uuid())
  email       String   @unique @db.VarChar(255)
  password    String?  @db.VarChar(255)
  createdAt   DateTime @default(now())
  name        String?  @db.VarChar(255)
  photoURL    String?  @db.VarChar(255)
  country     String?  @db.VarChar(100)
  phoneNumber String?  @db.VarChar(100)
  role        Role
  updatedAt   DateTime @updatedAt
  status      Status   @default(pending)
  admin       Admin?
  creator     Creator?
  Event       Event?   @relation(fields: [eventId], references: [id])
  finance     Finance?
  eventId     String?
}

model Admin {
  id          String  @id @unique @default(cuid())
  designation String?
  mode        Mode    @default(normal)
  adminRole   String?
  inviteToken String? @unique
  userId      String  @unique
  user        User    @relation(fields: [userId], references: [id])
}

model Creator {
  id          String      @id @unique @default(cuid())
  firstName   String      @db.VarChar(100)
  lastName    String      @db.VarChar(100)
  pronounce   String?     @db.VarChar(100)
  nationality String?     @db.VarChar(100)
  location    String?     @db.VarChar(100)
  birthDate   DateTime?
  instagram   String?     @db.VarChar(100)
  tiktok      String?     @db.VarChar(100)
  employment  Employment? @default(others)
  languages   Json?
  userId      String      @unique
  user        User        @relation(fields: [userId], references: [id])
  industries  Industry[]
  interests   Interest[]
}

model Industry {
  id      String  @id @unique @default(cuid())
  name    String?
  rank    Int?
  userId  String
  creator Creator @relation(fields: [userId], references: [userId])
}

model Interest {
  id      String  @id @unique @default(cuid())
  name    String?
  rank    Int?
  userId  String
  creator Creator @relation(fields: [userId], references: [userId])
}

model Finance {
  id     String @id @unique @default(cuid())
  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model Event {
  id          String   @id @unique @default(cuid())
  title       String
  description String
  color       String
  allDay      Boolean
  userId      String
  start       DateTime
  end         DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User[]
}

model session {
  sid    String   @id @unique @default(cuid())
  sess   Json
  expire DateTime
}

enum Mode {
  god
  normal
}

enum Status {
  active
  pending
  banned
  rejected
}

enum Role {
  admin
  creator
  brand
}

enum Employment {
  fulltime
  freelance
  part_time
  student
  in_between
  unemployed
  others
}
